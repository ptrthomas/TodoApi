{
  "info": {
    "_postman_id": "todo-api-simple",
    "name": "Todo API Simple",
    "description": "A complete collection demonstrating all Todo API operations including authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{bearerToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "1. Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Save the bearer token for authenticated requests",
              "if (pm.response.code === 200) {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set(\"bearerToken\", jsonData.accessToken);",
              "    console.log(\"Bearer token saved:\", jsonData.accessToken);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "login"
          ]
        },
        "description": "Login with hardcoded credentials to get a bearer token (valid for 1 hour)"
      },
      "response": [
      ]
    },
    {
      "name": "2. Create Todo",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Assertions",
              "pm.test(\"Status code is 201 Created\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has id field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "",
              "pm.test(\"Response has title field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('title');",
              "    pm.expect(jsonData.title).to.eql('Learn REST APIs');",
              "});",
              "",
              "pm.test(\"Response has complete field set to false\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('complete');",
              "    pm.expect(jsonData.complete).to.be.false;",
              "});",
              "",
              "// Save the todo ID for subsequent requests",
              "if (pm.response.code === 201) {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set(\"todoId\", jsonData.id);",
              "    console.log(\"Todo ID saved:\", jsonData.id);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Learn REST APIs\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/todos",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "todos"
          ]
        },
        "description": "Create a new todo item (no authentication required)"
      },
      "response": [
      ]
    },
    {
      "name": "3. Get All Todos",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/todos",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "todos"
          ]
        },
        "description": "Get all todos (no authentication required)"
      },
      "response": [
      ]
    },
    {
      "name": "4. Get Todo by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Assertions",
              "pm.test(\"Status code is 200 OK\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has id field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "",
              "pm.test(\"Response has title field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('title');",
              "    pm.expect(jsonData.title).to.be.a('string');",
              "});",
              "",
              "pm.test(\"Response has complete field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('complete');",
              "    pm.expect(jsonData.complete).to.be.a('boolean');",
              "});",
              "",
              "pm.test(\"Returned ID matches requested ID\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('todoId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/todos/{{todoId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "todos",
            "{{todoId}}"
          ]
        },
        "description": "Get a specific todo by ID (no authentication required). Uses the ID saved from Create Todo request."
      },
      "response": [
      ]
    },
    {
      "name": "5. Update Todo",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Learn REST APIs\",\n  \"isComplete\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/todos/{{todoId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "todos",
            "{{todoId}}"
          ]
        },
        "description": "Update an existing todo (no authentication required). Uses the ID saved from Create Todo request."
      },
      "response": [
      ]
    },
    {
      "name": "6. Delete Todo (with auth)",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{bearerToken}}",
              "type": "string"
            }
          ]
        },
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/api/todos/{{todoId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "todos",
            "{{todoId}}"
          ]
        },
        "description": "Delete a todo (requires bearer token authentication). Make sure to run the Login request first! Uses the ID saved from Create Todo request."
      },
      "response": [
      ]
    },
    {
      "name": "7. Reset All Data",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/reset",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "reset"
          ]
        },
        "description": "Clear all todos (helpful for workshop demos)"
      },
      "response": [
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "bearerToken",
      "value": null,
      "type": "string"
    },
    {
      "key": "todoId",
      "value": "",
      "type": "string"
    }
  ]
}